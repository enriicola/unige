package TestCases;

import org.junit.BeforeClass;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.JavascriptExecutor;
import java.util.*;
import TestCases.PO.Claroline.AdministrationPO;
import TestCases.PO.Claroline.AgendaPO;
import TestCases.PO.Claroline.Course001ExercisePO;
import TestCases.PO.Claroline.Course001PO;
import TestCases.PO.Claroline.Course001QuestionPO;
import TestCases.PO.Claroline.CourseListPO;
import TestCases.PO.Claroline.CreateCoursePO;
import TestCases.PO.Claroline.CreateUserPO;
import TestCases.PO.Claroline.LoginPO;
import TestCases.PO.Claroline.MyDesktopPO;
import TestCases.PO.Claroline.UserListPO;
import TestCases.PO.Claroline.User_sCoursePO;
import TestCases.PO.Claroline.UsersCoursePO;
import TestCases.PO.Claroline.addNewExercisePO;
import TestCases.PO.Claroline.addNewQuestionPO;
import TestCases.PO.Claroline.adminCourse001PO;
import TestCases.PO.Claroline.exercisesPO;

public class ClarolineTestCases {

    @BeforeClass()
    public static void setup() {
        // System.setProperty("webdriver.gecko.driver", "InsertGeckoPathHere"); // https://stackoverflow.com/questions/76820262/exception-in-thread-main-org-openqa-selenium-remote-nosuchdriverexception-gec
    }

    private WebDriver driver;

    private Map<String, Object> vars;

    private JavascriptExecutor js;

    @Before
    public void setUp() {
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void addUser() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "admin", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goToAdministration();
        AdministrationPO _AdministrationPO = new AdministrationPO(driver, js, vars);
        _AdministrationPO.goToCreateUser();
        CreateUserPO _CreateUserPO = new CreateUserPO(driver, js, vars);
        _CreateUserPO.addUser("Name001", "firstname001", "user001", "password001", "password001");
        assertThat(_CreateUserPO.set_CSSSELECTOR_msgSuccess_1(), is("The new user has been sucessfully created"));
        _CreateUserPO.click_LINKTEXT_Logout();
    }

    @Test
    public void searchUser() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "admin", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goToAdministration();
        AdministrationPO _AdministrationPO = new AdministrationPO(driver, js, vars);
        _AdministrationPO.searchUser("user001");
        assertThat(_AdministrationPO.set_ID_L0_1(), is("Name001"));
        assertThat(_AdministrationPO.set_CSSSELECTOR_tdnth_child3(), is("firstname001"));
        assertThat(_AdministrationPO.set_CSSSELECTOR_tdnth_child6(), is("User"));
        UserListPO _UserListPO = new UserListPO(driver, js, vars);
        _UserListPO.doLogout();
    }

    @Test
    public void login() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("user001", "password001", true, true);
        assertThat(_LoginPO.set_CSSSELECTOR_blockHeaderuserName_1(), is("firstname001 Name001"));
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.doLogout();
    }

    @Test
    public void addCourse() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "admin", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goToAdministration();
        AdministrationPO _AdministrationPO = new AdministrationPO(driver, js, vars);
        _AdministrationPO.goToCreateCourse();
        CreateCoursePO _CreateCoursePO = new CreateCoursePO(driver, js, vars);
        _CreateCoursePO.addCourse("Course001", "001", "Sciences", "Economics");
        assertThat(_CreateCoursePO.set_CSSSELECTOR_claroDialogMsg_1(), is("You have just created the course website : 001"));
        _CreateCoursePO.click_LINKTEXT_Continue();
    }

    @Test
    public void addCourseEvent() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "admin", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goTo001();
        adminCourse001PO _adminCourse001PO = new adminCourse001PO(driver, js, vars);
        _adminCourse001PO.goToAgenda();
        AgendaPO _AgendaPO = new AgendaPO(driver, js, vars);
        _AgendaPO.goToAddEvent("Exam 001", "31", "May", "2023", "Genoa");
        assertThat(_AgendaPO.set_CSSSELECTOR_claroDialogMsg_1(), is("Event added to the agenda."));
        _AgendaPO.doLogout();
    }

    @Test
    public void addCourseExercise() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "admin", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goTo001();
        adminCourse001PO _adminCourse001PO = new adminCourse001PO(driver, js, vars);
        _adminCourse001PO.goToExercises();
        exercisesPO _exercisesPO = new exercisesPO(driver, js, vars);
        _exercisesPO.goToAddExercise();
        addNewExercisePO _addNewExercisePO = new addNewExercisePO(driver, js, vars);
        _addNewExercisePO.addExercise("Exercise 001");
        assertThat(_addNewExercisePO.set_CSSSELECTOR_claroDialogMsg_1(), is("Exercise added"));
        _exercisesPO.doLogout();
    }

    @Test
    public void enrollUser() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("user001", "password001", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goToEnrollment();
        UsersCoursePO _UsersCoursePO = new UsersCoursePO(driver, js, vars);
        _UsersCoursePO.searchCourse("Course001");
        User_sCoursePO _User_sCoursePO = new User_sCoursePO(driver, js, vars);
        _User_sCoursePO.enrollUser();
        Course001PO _Course001PO = new Course001PO(driver, js, vars);
        _Course001PO.enroll();
        assertThat(_Course001PO.set_CSSSELECTOR_claroDialogMsg_1(), is("You've been enrolled on the course"));
        _Course001PO.doLogout();
    }

    @Test
    public void makeExerciseVisible() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "admin", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goTo001();
        adminCourse001PO _adminCourse001PO = new adminCourse001PO(driver, js, vars);
        _adminCourse001PO.goToExercises_1();
        assertEquals(vars.get("alt_text").toString(), "Make visible");
        _adminCourse001PO.click_CSSSELECTOR_invisiblenth_child2tdnth_child4img_1();
        assertEquals(vars.get("alt_text").toString(), "Make invisible");
        exercisesPO _exercisesPO = new exercisesPO(driver, js, vars);
        _exercisesPO.doLogout();
    }

    @Test
    public void searchCourse() {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "admin", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goToAdministration();
        AdministrationPO _AdministrationPO = new AdministrationPO(driver, js, vars);
        _AdministrationPO.searchCourse("Course001");
        assertThat(_AdministrationPO.set_CSSSELECTOR_ab_1(), is("Course001"));
        assertThat(_AdministrationPO.set_ID_L0_1(), is("001"));
        CourseListPO _CourseListPO = new CourseListPO(driver, js, vars);
        _CourseListPO.doLogout();
    }

    @Test
    public void addQuestionsToExercise() throws InterruptedException {
        driver.get("http://localhost:3000/claroline11110/index.php");
        LoginPO _LoginPO = new LoginPO(driver, js, vars);
        _LoginPO.doLogin("admin", "admin", true, false);
        MyDesktopPO _MyDesktopPO = new MyDesktopPO(driver, js, vars);
        _MyDesktopPO.goTo001();
        adminCourse001PO _adminCourse001PO = new adminCourse001PO(driver, js, vars);
        _adminCourse001PO.goToExercises_2();
        // exercisesPO _exercisesPO = new exercisesPO(driver, js, vars);
        addNewQuestionPO _addNewQuestionPO = new addNewQuestionPO(driver, js, vars);
        
        _addNewQuestionPO.addQuestion("Question 1", "3", "-3", true, false, true, true, true, false, false, null, null, true, false, null);
        
        _addNewQuestionPO.addQuestion("Question 2", null, null, true, false, true, false, true, true, true, "3", "-3", false, false, null);
        
        _addNewQuestionPO.addQuestion("Question 3", "3", null, true, true, true, true, true, false, false, null, null, false, true, "-3");
        
        Course001QuestionPO _Course001QuestionPO = new Course001QuestionPO(driver, js, vars);
        _Course001QuestionPO.goToExercise001();
        assertThat(_Course001QuestionPO.set_CSSSELECTOR_tbodynth_child2trnth_child1tdnth_child2_1(), is("Question 1"));
        assertThat(_Course001QuestionPO.set_CSSSELECTOR_trnth_child1small(), is("Multiple choice (Unique answer)"));

        assertThat(_Course001QuestionPO.set_CSSSELECTOR_trnth_child2tdnth_child2(), is("Question 2"));
        assertThat(_Course001QuestionPO.set_CSSSELECTOR_trnth_child2tdnth_child4(), is("True/False"));
        
        assertThat(_Course001QuestionPO.set_CSSSELECTOR_trnth_child3tdnth_child2(), is("Question 3"));
        assertThat(_Course001QuestionPO.set_CSSSELECTOR_trnth_child3small(), is("Multiple choice (Multiple answers)"));
        Course001ExercisePO _Course001ExercisePO = new Course001ExercisePO(driver, js, vars);
        _Course001ExercisePO.doLogout();
    }
}
